{
	"name": "dddpy",
	"context": "..",
	"dockerFile": "./Dockerfile",
	"settings": { 
		"terminal.integrated.shell.linux": null,
		"python.pythonPath": "/usr/local/bin/python",
		// "python.linting.pylintPath": "/usr/local/bin/pylint",
		// "python.linting.enabled": true,
		"python.testing.pytestArgs": [
            "tests", "-vv"
        ],
		"python.testing.unittestEnabled": true,
		"python.testing.pytestEnabled": true,
        // "python.linting.pylintEnabled": true,
	},
	"extensions": [
		"ms-python.python",
		"ms-python.vscode-pylance",
		"vscode-icons-team.vscode-icons",
		"github.vscode-pull-request-github",
		"mhutchie.git-graph",
		"mechatroner.rainbow-csv",
		"redhat.vscode-yaml",
		"visualstudioexptteam.vscodeintellicode",
		"vscodevim.vim"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "make install",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
